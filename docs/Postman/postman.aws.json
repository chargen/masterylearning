{
	"id": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
	"name": "MasteryLearning AWS",
	"description": "",
	"order": [],
	"folders": [
		{
			"id": "25ea952c-719c-2b47-882c-85b1e2c360cc",
			"name": "Courses",
			"description": "",
			"order": [
				"1a74558d-d866-6041-7e3f-ae2b2900cb05",
				"cfa31e2d-c14a-4194-fc5e-1ee9f4a31a1a",
				"cf5eabf4-bf87-ec68-5e2e-3b8b525aeae5",
				"d092bcc3-82bf-5d6c-8f01-9970d8f57703"
			],
			"owner": 0
		},
		{
			"id": "f95d8e0e-fa2e-9eb1-81c6-fbd94ef1acef",
			"name": "Users",
			"description": "",
			"order": [
				"54ab8df7-94cc-b3ff-c789-de1085434953",
				"3eda566c-e986-fca3-369c-b92f41d0293e",
				"897abcd8-b700-a7f9-5739-4115012c4606",
				"9aee9531-ab5e-045a-17ce-31ca0691eab3"
			],
			"owner": 0,
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0"
		}
	],
	"timestamp": 1459796381514,
	"owner": 0,
	"remoteLink": "",
	"public": false,
	"requests": [
		{
			"id": "1a74558d-d866-6041-7e3f-ae2b2900cb05",
			"headers": "Content-Type: application/json\nAuthorization: Basic dXNlcjoxMjM0NTY=\n",
			"url": "http://52.39.115.176/api/courses",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "user",
				"password": "123456",
				"saveToRequest": true
			},
			"time": 1461165169460,
			"name": "Add Course",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"folder": "25ea952c-719c-2b47-882c-85b1e2c360cc",
			"rawModeData": "{\n    \"title\": \"Formal Methods\",\n    \"subtitle\": \"Formal Methods in Computer Science\",\n    \"period\":\"(SS'16)\",\n    \"description\": \"This course teaches block 4 of Formal Methods in Computer Science.\",\n    \"children\": [\n        {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Section 1\",\n                \"description\": \"Description\"\n            },\n            \"children\": [\n                {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"title\": \"Paragraph title\",\n                        \"text\": \"lorem ipsum\",\n                        \"paragraphType\": \"text\"\n                    },\n                    \"children\": []\n                },\n                {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"title\": \"Paragraph title\",\n                        \"text\": \"lorem ipsum\",\n                        \"paragraphType\": \"text\"\n                    },\n                    \"children\": []\n                },\n                {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"text\": \"lorem ipsum\",\n                        \"answer\": true,\n                        \"correct\": {\n                            \"data\": {\n                                \"type\": \"section\",\n                                \"title\": \"Section 1\"\n                            }\n                        },\n                        \"incorrect\": {\n                            \"data\": {\n                                \"type\": \"section\",\n                                \"title\": \"Section 2\"\n                            }\n                        }\n                    }\n                }\n            ]\n        },\n        {\n            \"data\": {\n                \"type\": \"yesnoexercise\",\n                \"text\": \"foo exercise\",\n                \"answer\": true,\n                \"correct\": {\n                    \"data\": {\n                        \"type\": \"section\",\n                        \"title\": \"Correct Exercise Section 1\"\n                    }\n                },\n                \"incorrect\": {\n                    \"data\": {\n                        \"type\": \"section\",\n                        \"title\": \"Incorrect Exercise Section 1\"\n                    },\n                    \"children\": [\n                        {\n                            \"data\": {\n                                \"type\": \"paragraph\",\n                                \"text\": \"lorem ipsum\"\n                            }\n                        },\n                        {\n                            \"data\": {\n                                \"type\": \"paragraph\",\n                                \"text\": \"lorem ipsum\"\n                            }\n                        }\n                    ]\n                }\n            },\n            \"children\": []\n        }\n    ]\n}"
		},
		{
			"id": "3eda566c-e986-fca3-369c-b92f41d0293e",
			"headers": "Authorization: Basic dXNlcjoxMjM0NTY=\nContent-Type: application/json\n",
			"url": "http://52.39.115.176/api/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "user",
				"password": "123456",
				"saveToRequest": true
			},
			"time": 1461308932047,
			"name": "Add user",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"folder": "f95d8e0e-fa2e-9eb1-81c6-fbd94ef1acef",
			"rawModeData": "{\n    \"username\": \"john@doe.com\",\n    \"fullname\": \"John Doe\",\n    \"password\": \"123456\"\n}"
		},
		{
			"id": "54ab8df7-94cc-b3ff-c789-de1085434953",
			"headers": "Content-Type: application/json\n",
			"url": "http://52.39.115.176/api/bootstrap/users",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461165153820,
			"name": "Bootstrap Users",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"folder": "f95d8e0e-fa2e-9eb1-81c6-fbd94ef1acef",
			"rawModeData": "{\n    \"title\": \"Formal Methods in Computer Science\",\n        \"subtitle\": \"Formal Methods Block 4\",\n        \"period\": \"(SS'16)\",\n        \"description\": \"A short description of the lecture's content\",\n        \"children\": [\n    {\n        \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1. Preliminaries: Propositional Logic\",\n            \"description\": \"A short description of propositional logic\"\n        },\n        \"children\": [{\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.1 Syntax\",\n                \"description\": \"Subsection 1 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.1.1 Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\"\n                },\n                \"children\": [{\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aliquam dolore harum iusto maiores maxime, minus modi molestiae, natus nisi non obcaecati porro quis quos reprehenderit repudiandae tempore temporibus!\",\n                        \"paragraphType\": \"text\"\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores aspernatur atque libero magnam maiores perspiciatis quibusdam, repellat sapiente sunt tempora? Aperiam assumenda dolor ducimus eos officia quisquam rerum sapiente voluptatibus.\",\n                        \"number\": 1,\n                        \"title\": \"Syntax\",\n                        \"paragraphType\": \"definition\",\n                        \"mode\": \"text\"\n                    },\n                    \"children\": [{\n                        \"data\": {\n                            \"type\": \"continue-button\"\n                        },\n                        \"children\": []\n                    }]\n                }, {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"Atomic propositions are symbols \\\\(a\\\\), \\\\(b\\\\), \\\\(c\\\\), ..., which can either have the value true or false.\",\n                        \"number\": 2,\n                        \"title\": \"Propositions\",\n                        \"paragraphType\": \"definition\",\n                        \"mode\": \"math\"\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"A formula G is a subformula ... if ... \\\\( sub(\\\\top) = {\\\\top} \\\\)\",\n                        \"number\": 3,\n                        \"title\": \"Propositions\",\n                        \"paragraphType\": \"definition\",\n                        \"mode\": \"math\"\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"section\",\n                        \"title\": \"1.1.1.1 Parentheses\",\n                        \"description\": \"Explains handling of parantheses in logical formulas.\"\n                    },\n                    \"children\": [{\n                        \"data\": {\n                            \"type\": \"paragraph\",\n                            \"text\": \"A paragrahp of a section.\",\n                            \"paragraphType\": \"text\"\n                        },\n                        \"children\": []\n                    }]\n                }, {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"correct\": null,\n                        \"incorrect\": null,\n                        \"title\": \"Evaluate Syntax\",\n                        \"text\": \"Is \\\\((P \\\\wedge Q)\\\\) a subformula of the formula \\\\((R \\\\vee (P \\\\wedge Q))\\\\)?\",\n                        \"answer\": true,\n                        \"blocks\": true\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"correct\": null,\n                        \"incorrect\": null,\n                        \"title\": \"Evaluate Syntax\",\n                        \"text\": \"Is \\\\((Q \\\\wedge P)\\\\) a subformula of the formula \\\\((R \\\\vee (P \\\\wedge Q))\\\\)?\",\n                        \"answer\": false,\n                        \"blocks\": true\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"correct\": null,\n                        \"incorrect\": null,\n                        \"title\": \"Evaluate Semantics\",\n                        \"text\": \"Given the following variable assignments: <ul><li>\\\\(a \\\\rightarrow 0\\\\)</li><li>\\\\(b \\\\rightarrow 1\\\\)</li><li>\\\\(c \\\\rightarrow 1\\\\)</li><li>\\\\(d \\\\rightarrow 1\\\\)</li></ul>Please specify the result for the following logical formula: <strong>\\\\((a \\\\land b) \\\\lor (c \\\\oplus D) \\\\)</strong>\",\n                        \"answer\": true,\n                        \"blocks\": true\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"multianswerexercise\",\n                        \"correct\": {\n                            \"data\": {\n                                \"type\": \"section\",\n                                \"title\": \"Exercise Section title\",\n                                \"description\": \"Section description.\"\n                            },\n                            \"children\": [{\n                                \"data\": {\n                                    \"type\": \"paragraph\",\n                                    \"text\": \"Your answer is correct.\",\n                                    \"paragraphType\": \"text\"\n                                },\n                                \"children\": []\n                            }]\n                        },\n                        \"incorrect\": {\n                            \"data\": {\n                                \"type\": \"section\",\n                                \"title\": \"Exercise Section title\",\n                                \"description\": \"Section description.\"\n                            },\n                            \"children\": [{\n                                \"data\": {\n                                    \"type\": \"paragraph\",\n                                    \"text\": \"Your answer is wrong.\",\n                                    \"paragraphType\": \"text\"\n                                },\n                                \"children\": []\n                            }]\n                        },\n                        \"title\": \"Multiple Answers\",\n                        \"text\": \"Which of the following answeres is syntactically right:\",\n                        \"answerCandidates\": [{\n                            \"text\": \"\\\\(Q \\\\wedge P\\\\)\",\n                            \"correct\": true\n                        }, {\"text\": \"\\\\(Q \\\\wedge \\\\wedge P\\\\)\", \"correct\": false}, {\n                            \"text\": \"\\\\(\\\\wedge P\\\\)\",\n                            \"correct\": false\n                        }, {\"text\": \"\\\\((Q \\\\wedge P)\\\\)\", \"correct\": true}],\n                        \"blocks\": true,\n                        \"next\": null\n                    },\n                    \"children\": []\n                }]\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.1.2 Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": 2,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.2 Semantic\",\n                \"description\": \"Subsection 2 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.2.1 Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": 21\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.2.2 Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": 20,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3 Subsection 3\",\n                \"description\": \"Subsection 3 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.3.1 Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": 24\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.3.2 Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": 23,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"unit\",\n                \"fullTitle\": \"1.4 Unit 1: Propositional Logic Formulas\",\n                \"breadcrumbTitle\": \"Unit 1\",\n                \"description\": \"Unit 1 description\",\n                \"prev\": null,\n                \"next\": 26\n            },\n            \"children\": []\n        }, {\n            \"data\": {\n                \"type\": \"unit\",\n                \"fullTitle\": \"1.5 Unit 2: Propositional Logic Formulas\",\n                \"breadcrumbTitle\": \"Unit 1\",\n                \"description\": \"Unit 1 description\",\n                \"prev\": 25,\n                \"next\": null\n            },\n            \"children\": []\n        }]\n    }, {\n        \"data\": {\n            \"type\": \"section\",\n            \"title\": \"Section 2\",\n            \"description\": \"Section 2 Description\"\n        },\n        \"children\": [{\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 1\",\n                \"description\": \"Subsection 1 Description\"\n            },\n            \"children\": []\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 2\",\n                \"description\": \"Subsection 2 Description\"\n            },\n            \"children\": []\n        }]\n    }, {\n        \"data\": {\n            \"type\": \"section\",\n            \"title\": \"Section 3\",\n            \"description\": \"Section 3 Description\"\n        },\n        \"children\": [{\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 1\",\n                \"description\": \"Subsection 1 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 2\",\n                \"description\": \"Subsection 2 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }]\n    }]\n}\n"
		},
		{
			"id": "897abcd8-b700-a7f9-5739-4115012c4606",
			"headers": "Content-Type: application/json\n",
			"url": "http://52.39.115.176/api/password/resetToken",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461309020947,
			"name": "Get Password Reset Token copy",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"rawModeData": "{\n    \"username\": \"john@doe.com\"\n}"
		},
		{
			"id": "9aee9531-ab5e-045a-17ce-31ca0691eab3",
			"headers": "Content-Type: application/json\n",
			"url": "http://52.39.115.176/api/password/resetToken/638539b6-0dee-4f0a-99cc-4693b06deab0",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1461309026358,
			"name": "Reset Password by Token copy",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"rawModeData": "{\n    \"username\": \"john@doe.com\",\n    \"password\": \"123456\"\n}"
		},
		{
			"id": "cf5eabf4-bf87-ec68-5e2e-3b8b525aeae5",
			"headers": "Content-Type: application/json\nAuthorization: Basic dXNlcjoxMjM0NTY=\n",
			"url": "http://52.39.115.176/api/courses",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "GET",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "user",
				"password": "123456",
				"saveToRequest": true
			},
			"time": 1461164915300,
			"name": "Get Course",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"folder": "25ea952c-719c-2b47-882c-85b1e2c360cc",
			"rawModeData": ""
		},
		{
			"id": "cfa31e2d-c14a-4194-fc5e-1ee9f4a31a1a",
			"headers": "Content-Type: application/json\nAuthorization: Basic dXNlcjoxMjM0NTY=\n",
			"url": "52.39.115.176/api/courses",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "user",
				"password": "123456",
				"saveToRequest": true
			},
			"time": 1461612988081,
			"name": "Add Andis course copy",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"rawModeData": "{\n  \"title\": \"Formal Methods in Computer Science (SS'16)\",\n  \"period\": \"N/A\",\n  \"description\": \"N/A\",\n  \"children\": [\n    {\n      \"data\": {\n        \"type\": \"section\",\n        \"title\": \"1 Temporal Logic\",\n        \"description\": \"N/A\"\n      },\n      \"children\": [\n        {\n          \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1.1 Temporal Logic vs. Propositional Logic vs. Predicate Logic\",\n            \"description\": \"N/A\"\n          },\n          \"children\": []\n        },\n        {\n          \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1.2 Model of Computation\",\n            \"description\": \"N/A\"\n          },\n          \"children\": [\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"Finite-state systems are modeled by labeled state-transition graphs, so called Kripke structures:\",\n                \"number\": 0,\n                \"title\": \"N/A\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"<p>Let $AP$ be a finite set of atomic propositions, then a <b>Kripke structure</b> is a triple $M = (S, R, L)$, where <ul><li>$S$ is a set of states,</li><li>$R \\\\subseteq S \\\\times S$ is a <b>total</b> transition relation, i.e., for all states $s \\\\in S$ there exists a state $s'\\\\in S$ such that $(s, s') \\\\in R$, and</li><li>$L : S \\\\rightarrow P(AP)$ is a <b>labeling function</b> that gives, for each state, the set of atomic propositions that hold in that state.</li></ul></p><p>A <b>path</b> $\\\\pi$ in M is an infinite sequence of states $\\\\pi = s_0, s_1, \\\\ldots$ such that, for $k \\\\geq 0$, $(s_k, s_{k + 1}) \\\\in R$. We write $\\\\pi^k$ to denote the <b>suffix</b> of $\\\\pi$ starting at $s_k$.</p><p style=\\\"text-align: center;\\\">Unless otherwise stated, all of our results apply only to <b>finite</b> Kripke structures.</p>\",\n                \"number\": 0,\n                \"title\": \"Kripke Structure\",\n                \"paragraphType\": \"definition\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"<p>The graph structure of a Kripke structure lends itself to a graphical representation. For example, the Kripke structure $(\\\\{ s_0, s_1, s_2 \\\\}, \\\\{ (s_0, s_1), (s_0, s_2) (s_1, s_1) (s_2, s_1), (s_2, s_0) \\\\}, [ s_0 \\\\mapsto \\\\{ b, c \\\\}, s_1 \\\\mapsto \\\\{ c \\\\}, s_2 \\\\mapsto \\\\{ a, b \\\\}])$ can be graphically represented as follows:</p>\",\n                \"number\": 0,\n                \"title\": \"N/A\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"Let $M = (S, R, L)$ be a Kripke structure. If we designate a state $s \\\\in S$ as initial state, then $M$ can be unwound into an infinite tree with $s$ as its root. We will refer to this infinite tree as the <b>computation tree</b> of $M$. Paths in the tree represent possible computations or behaviors of $M$.\",\n                \"number\": 0,\n                \"title\": \"Computation Tree\",\n                \"paragraphType\": \"definition\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"Choose a state of the following Kripke structure to see the corresponding computation tree:\",\n                \"number\": 0,\n                \"title\": \"N/A\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"A tuple $(M, s)$ is an implicit, finite representation of the infinite computation tree that results from unwinding the Kripke structure $M$ starting at state $s$.\",\n                \"number\": 0,\n                \"title\": \"Implicit Representation of Computation Trees\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            }\n          ]\n        },\n        {\n          \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1.3 Computation Tree Logics\",\n            \"description\": \"N/A\"\n          },\n          \"children\": [\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"<p>Temporal logics may differ according to how they handle branching in the underlying computation tree.</p><p>In a linear temporal logic, operators are provided for describing events along a single computation path.</p><p>In a branching-time logic the temporal operators quantify over the paths that are possible from a given state.</p>\",\n                \"number\": 0,\n                \"title\": \"N/A\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"Let $M$ be a Kripke structure and let $f$ be a specification expressed in temporal logic. Then, the model checking problem is the problem of finding all states $s$ of $M$ such that $M, s \\\\models f$.\",\n                \"number\": 0,\n                \"title\": \"Model-Checking Problem\",\n                \"paragraphType\": \"definition\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3.1 The Logic CTL*\",\n                \"description\": \"N/A\"\n              },\n              \"children\": [\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<p>The computation tree logic CTL* combines both branching-time and linear-time operators. Furthermore, a path quantifier can prefix an assertion composed of arbitrary combinations of linear-time operators.</p>\",\n                    \"number\": 0,\n                    \"title\": \"N/A\",\n                    \"paragraphType\": \"text\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                },\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<table style=\\\"width: 100%; margin-top: 10px;\\\"><tr><td style=\\\"width: 25%;\\\"><b>Linear-Time Operator</b></td><td style=\\\"width: 75%;\\\"><b>Textual Description</b></td></tr><tr><td><b>X</b>$p$</td><td>\\\"$p$ holds next time\\\"</td></tr><tr><td><b>F</b>$p$</td><td>\\\"$p$ holds sometime in the future\\\"</td></tr><tr><td><b>G</b>$p$</td><td>\\\"$p$ holds globally in the future\\\"</td></tr><tr><td>$p$<b>U</b>$q$</td><td>\\\"$p$ holds until $q$ holds\\\"</td></tr></table><table style=\\\"width: 100%; margin-top: 10px;\\\"><tr><td style=\\\"width: 25%;\\\"><b>Path Quantifier</b></td><td style=\\\"width: 75%;\\\"><b>Textual Description</b></td></tr><tr><td><b>A</b></td><td>\\\"for every path\\\"</td></tr><tr><td><b>E</b></td><td>\\\"there exists a path\\\"</td></tr></table>\",\n                    \"number\": 0,\n                    \"title\": \"Linear-Time Operators and Path Quantifiers\",\n                    \"paragraphType\": \"definition\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                },\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<p>In CTL* we distinguish between <b>state formulas</b> and <b>path formulas</b>. The syntax of state formulas is defined as follows:</p><ul><li>If $p \\\\in AP$, then $p$ is a state formula.</li><li>If $f$ and $g$ are state formulas, then $\\\\neg f$ and $(f \\\\vee g)$ are state formulas.</li><li>If $f$ is a path formula, then $($<b>E</b>$f)$ is a state formula.</li></ul><p>The syntax of path formulas is defined as follows:</p><ul><li>If $f$ is a state formula, then $f$ is also a path formula.</li><li>If $f$ and $g$ are path formulas, then $\\\\neg f$, $(f \\\\vee g)$, $($<b>X</b>$f)$, and $(f$<b>U</b>$g)$ are path formulas.</li></ul>\",\n                    \"number\": 0,\n                    \"title\": \"Syntax of CTL* Formulas\",\n                    \"paragraphType\": \"definition\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                },\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<p>We use the notation $M, s \\\\models f$ to define the semantics of a state formula $f$ when interpreted over a Kripke structure $M = (S, R, L)$ and an initial state $s\\\\in S$.If $f$ is a state formula, then the notation $M, s \\\\models f$ means that $f$ holds at state $s$ in the Kripke structure $M$. Assume $f_1$ and $f_2$ are state formulas and $g$ is a path formula. The relation $M, s \\\\models f$ is defined inductively as follows:</p><table style=\\\"margin-left: 20px;\\\"><tr><td style=\\\"width: 120px;\\\">$M, s \\\\models p$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$p \\\\in L(s)$</td></tr><tr><td>$M, s \\\\models \\\\neg f_1$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$M, s \\\\nvDash f_1$</td></tr><tr><td>$M, s \\\\models (f_1 \\\\vee f_2)$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$M, s \\\\models f_1$ or $M, s \\\\models f_2$</td></tr><tr><td>$M, s \\\\models ($<b>E</b>$g)$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>there exists a path $\\\\pi$ in $M$ starting with $s$ such that $M, \\\\pi \\\\models g$</td></tr></table><p>If $f$ is a path formula, then $M, \\\\pi \\\\models f$ means that $f$ holds along path $\\\\pi$ in Kripke structure $M$. Assume $g_1$ and $g_2$ are path formulas and $f$ is a state formula. The relation $M, \\\\pi \\\\models f$ is defined inductively as follows:</p><table style=\\\"margin-left: 20px;\\\"><tr><td style=\\\"width: 120px;\\\">$M, \\\\pi \\\\models f$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$s$ is the first state of $\\\\pi$ and we have $M, s \\\\models f$</td></tr><tr><td>$M, \\\\pi \\\\models \\\\neg g_1$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$M, \\\\pi \\\\nvDash g_1$</td></tr><tr><td>$M, \\\\pi \\\\models g_1 \\\\vee g_2$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$M, \\\\pi \\\\models g_1$ or $M, \\\\pi \\\\models g_2$</td></tr><tr><td>$M, \\\\pi \\\\models $ <b>X</b>$g_1$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>$M, \\\\pi^1 \\\\models g_1$</td></tr><tr><td>$M, \\\\pi \\\\models g_1$<b>U</b>$g_2$</td><td style=\\\"padding-left: 10px; padding-right: 10px;\\\">$\\\\Leftrightarrow$</td><td>there exists a $k \\\\geq 0$ such that $M, \\\\pi^k \\\\models g_2$ and for $0 \\\\leq j < k$, $\\\\pi^j \\\\models g_1$</td></tr></table>\",\n                    \"number\": 0,\n                    \"title\": \"Semantics of CTL* Formulas\",\n                    \"paragraphType\": \"definition\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                },\n                {\n                  \"data\": {\n                    \"type\": \"section\",\n                    \"title\": \"Standard Abbreviations\",\n                    \"description\": \"N/A\"\n                  },\n                  \"children\": [\n                    {\n                      \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"<p>The customary abbreviations will be used for the connectives of propositional logic.</p><p>In addition, we will use the following abbreviations in writing temporal operators:</p><ul><li><b>A</b>$(f)$ $\\\\equiv$ $\\\\neg$<b>E</b>$(\\\\neg f)$</li><li><b>F</b>$(f)$ $\\\\equiv$ $true$<b>U</b>$f$</li><li><b>G</b>$(f)$ $\\\\equiv$ $\\\\neg$<b>F</b>$(\\\\neg f)$</li></ul>\",\n                        \"number\": 0,\n                        \"title\": \"N/A\",\n                        \"paragraphType\": \"text\",\n                        \"mode\": \"math\"\n                      },\n                      \"children\": []\n                    }\n                  ]\n                }\n              ]\n            },\n            {\n              \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3.2 The Logic CTL\",\n                \"description\": \"N/A\"\n              },\n              \"children\": [\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<p>CTL is a restricted subset of CTL* that permits only branching-time operators---each of the linear-time operators <b>G</b>, <b>F</b>, <b>X</b>, and <b>U</b> must be immediately preceded by a path quantifier.</p><p>More precisely, CTL is the subset of CTL* that is obtained if the following two rules are used to specify the syntax of path formulas:</p><ul><li>If $f$ and $g$ are state formulas, then <b>X</b>$f$ and $f$<b>U</b>$g$ are path formulas.</li><li>If $f$ is a path formula, then so is $\\\\neg f$.</li></ul><p>Example: <b>AG</b>(<b>EF</b>$p$)</p>\",\n                    \"number\": 0,\n                    \"title\": \"N/A\",\n                    \"paragraphType\": \"text\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                },\n                {\n                  \"data\": {\n                    \"type\": \"section\",\n                    \"title\": \"Basic CTL Operators\",\n                    \"description\": \"N/A\"\n                  },\n                  \"children\": [\n                    {\n                      \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"<p>There are eight basic CTL operators:</p><ul><li><b>AX</b> and <b>EX</b>,</li><li><b>AG</b> and <b>EG</b>,</li><li><b>AF</b> and <b>EF</b>,</li><li><b>AU</b> and <b>EU</b>,</li></ul><p>Each of these can be expressed in terms of <b>EX</b>, <b>EG</b>, and <b>EU</b>:</p><ul><li><b>AX</b>$f$ = $\\\\neg$<b>EX</b>$(\\\\neg f)$</li><li><b>AG</b>$f$ = $\\\\neg$<b>EF</b>$(\\\\neg f)$</li><li><b>AF</b>$f$ = $\\\\neg$<b>EG</b>$(\\\\neg f)$</li><li><b>EF</b>$f$ = <b>E</b>[$true$<b>U</b>$f$]</li><li><b>A</b>[$f$<b>U</b>$g$] = $\\\\neg$<b>E</b>[$\\\\neg g$<b>U</b>$\\\\neg f \\\\wedge \\\\neg g$]$\\\\wedge \\\\neg$<b>EG</b>$\\\\neg g$</li></ul>\",\n                        \"number\": 0,\n                        \"title\": \"N/A\",\n                        \"paragraphType\": \"text\",\n                        \"mode\": \"math\"\n                      },\n                      \"children\": []\n                    },\n                    {\n                      \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"<p>The four most widely used CTL operators are illustrated below. Each computation tree has the state $s_0$ as its root.</p>\",\n                        \"number\": 0,\n                        \"title\": \"N/A\",\n                        \"paragraphType\": \"text\",\n                        \"mode\": \"math\"\n                      },\n                      \"children\": []\n                    },\n                    {\n                      \"data\": {\n                        \"type\": \"section\",\n                        \"title\": \"Evaluating CTL Formulas\",\n                        \"description\": \"N/A\"\n                      },\n                      \"children\": []\n                    },\n                    {\n                      \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"... translate CTL formula in ENF ... evaluate in a bottom-up fashion\",\n                        \"number\": 0,\n                        \"title\": \"N/A\",\n                        \"paragraphType\": \"text\",\n                        \"mode\": \"math\"\n                      },\n                      \"children\": []\n                    }\n                  ]\n                },\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"There exist very efficient model checking algorithms for the logic CTL.\",\n                    \"number\": 0,\n                    \"title\": \"Model-Checking Algorithms\",\n                    \"paragraphType\": \"text\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                }\n              ]\n            },\n            {\n              \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3.3 The Logic LTL\",\n                \"description\": \"N/A\"\n              },\n              \"children\": [\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<p>Linear temporal logic (LTL), on the other hand, will consist of formulas that have the form <b>A</b>$f$ where $f$ is a path formula in which the only state subformulas permitted are atomic propositions.</p><p>More precisely, a path formula is either:</p><ul><li>If $p \\\\in AP$, then $p$ is a path formula.</li><li>If $f$ and $g$ are path formulas, then $\\\\neg f$, $f \\\\vee g$, <b>X</b>$f$, and $f$<b>U</b>$g$ are path formulas.</li></ul><p>Example: <b>A</b>(<b>FG</b>$p$)</p>\",\n                    \"number\": 0,\n                    \"title\": \"N/A\",\n                    \"paragraphType\": \"text\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                }\n              ]\n            },\n            {\n              \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3.4 Syntactic Relationship between CTL* and its Sublogics\",\n                \"description\": \"N/A\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3.5 Expressive Power\",\n                \"description\": \"N/A\"\n              },\n              \"children\": [\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<p>It can be shown that the three logics discussed in this section have different expressive powers.</p><p>For example, there is no CTL formula that is equivalent to the LTL formula <b>A</b>(<b>FG</b>$p$).</p><p>Likewise, there is no LTL formula that is equivalent to the CTL formula <b>AG</b>(<b>EF</b>$p$).</p><p>The disjunction <b>A</b>(<b>FG</b>$p$) $\\\\vee$ <b>AG</b>(<b>EF</b> $p$) is a CTL* formula that is not expressible in either CTL or LTL.</p>\",\n                    \"number\": 0,\n                    \"title\": \"N/A\",\n                    \"paragraphType\": \"text\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                }\n              ]\n            },\n            {\n              \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3.6 Typical CTL* Formulas\",\n                \"description\": \"N/A\"\n              },\n              \"children\": [\n                {\n                  \"data\": {\n                    \"type\": \"paragraph\",\n                    \"text\": \"<ul><li><b>EF</b>($Started \\\\wedge \\\\neg Ready$): It is possible to get to a state where $Started$ holds but $Ready$ does not hold.</li><li><b>AG</b>($Req \\\\rightarrow $ <b>AF</b>$Ack$): If a request occurs, then it will be eventually acknowledged.</li><li><b>AG</b>(<b>AF</b>$DeviceEnabled$): The proposition $DeviceEnabled$ holds infinitely often on any computation path.</li><li><b>AG</b>(<b>EF</b>$Restart$): From any state it is possible to get to the $Restart$ state.</li><li><b>A</b>(<b>GF</b>$enabled \\\\Rightarrow$<b>GF</b>$executed$): if a process is infinitely-often $enabled$, then it is infinitely-often $executed$.</li></ul><p>Note that the first four formulas are CTL formulas.</p>\",\n                    \"number\": 0,\n                    \"title\": \"N/A\",\n                    \"paragraphType\": \"text\",\n                    \"mode\": \"math\"\n                  },\n                  \"children\": []\n                }\n              ]\n            }\n          ]\n        },\n        {\n          \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1.4 Important Concepts Learned\",\n            \"description\": \"N/A\"\n          },\n          \"children\": []\n        },\n        {\n          \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1.5 Further Reading\",\n            \"description\": \"N/A\"\n          },\n          \"children\": [\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"E. M. Clarke, E. A. Emerson, and A. P. Sistla. <a href=\\\"http://research.microsoft.com/en-us/um/people/qadeer/cse599f/papers/clarke-toplas.pdf\\\">Automatic Verification of Finite-State Concurrent Systems Using Temporal Logic Specifications</a>. ACM Trans. Programming Languages and Systems, 8(2):pages 244-263, 1986.\",\n                \"number\": 0,\n                \"title\": \"N/A\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            },\n            {\n              \"data\": {\n                \"type\": \"paragraph\",\n                \"text\": \"Z. Manna, and A. Pnueli. <a href=\\\"http://i.stanford.edu/pub/cstr/reports/cs/tr/81/836/CS-TR-81-836.pdf\\\">Verification of Concurrent Programs, Part I: The Temporal Framework</a>. June 1981, Department of Computer Science, Stanford University, Report. No. STAN-CS-81-836.\",\n                \"number\": 0,\n                \"title\": \"N/A\",\n                \"paragraphType\": \"text\",\n                \"mode\": \"math\"\n              },\n              \"children\": []\n            }\n          ]\n        }\n      ]\n    }\n  ]\n} "
		},
		{
			"id": "d092bcc3-82bf-5d6c-8f01-9970d8f57703",
			"headers": "Content-Type: application/json\nAuthorization: Basic dXNlcjoxMjM0NTY=\n",
			"url": "http://52.39.115.176/api/courses",
			"preRequestScript": null,
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": null,
			"currentHelper": "basicAuth",
			"helperAttributes": {
				"id": "basic",
				"username": "user",
				"password": "123456",
				"saveToRequest": true
			},
			"time": 1461165147008,
			"name": "Add Large Course",
			"description": "",
			"collectionId": "2832b3d9-5c52-baaa-7c5c-60ba801fadd0",
			"responses": [],
			"folder": "25ea952c-719c-2b47-882c-85b1e2c360cc",
			"rawModeData": "{\n    \"title\": \"Formal Methods in Computer Science\",\n        \"subtitle\": \"Formal Methods Block 4\",\n        \"period\": \"(SS'16)\",\n        \"description\": \"A short description of the lecture's content\",\n        \"children\": [\n    {\n        \"data\": {\n            \"type\": \"section\",\n            \"title\": \"1. Preliminaries: Propositional Logic\",\n            \"description\": \"A short description of propositional logic\"\n        },\n        \"children\": [{\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.1 Syntax\",\n                \"description\": \"Subsection 1 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.1.1 Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\"\n                },\n                \"children\": [{\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. A accusamus aliquam dolore harum iusto maiores maxime, minus modi molestiae, natus nisi non obcaecati porro quis quos reprehenderit repudiandae tempore temporibus!\",\n                        \"paragraphType\": \"text\"\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Asperiores aspernatur atque libero magnam maiores perspiciatis quibusdam, repellat sapiente sunt tempora? Aperiam assumenda dolor ducimus eos officia quisquam rerum sapiente voluptatibus.\",\n                        \"number\": 1,\n                        \"title\": \"Syntax\",\n                        \"paragraphType\": \"definition\",\n                        \"mode\": \"text\"\n                    },\n                    \"children\": [{\n                        \"data\": {\n                            \"type\": \"continue-button\"\n                        },\n                        \"children\": []\n                    }]\n                }, {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"Atomic propositions are symbols \\\\(a\\\\), \\\\(b\\\\), \\\\(c\\\\), ..., which can either have the value true or false.\",\n                        \"number\": 2,\n                        \"title\": \"Propositions\",\n                        \"paragraphType\": \"definition\",\n                        \"mode\": \"math\"\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"paragraph\",\n                        \"text\": \"A formula G is a subformula ... if ... \\\\( sub(\\\\top) = {\\\\top} \\\\)\",\n                        \"number\": 3,\n                        \"title\": \"Propositions\",\n                        \"paragraphType\": \"definition\",\n                        \"mode\": \"math\"\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"section\",\n                        \"title\": \"1.1.1.1 Parentheses\",\n                        \"description\": \"Explains handling of parantheses in logical formulas.\"\n                    },\n                    \"children\": [{\n                        \"data\": {\n                            \"type\": \"paragraph\",\n                            \"text\": \"A paragrahp of a section.\",\n                            \"paragraphType\": \"text\"\n                        },\n                        \"children\": []\n                    }]\n                }, {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"correct\": null,\n                        \"incorrect\": null,\n                        \"title\": \"Evaluate Syntax\",\n                        \"text\": \"Is \\\\((P \\\\wedge Q)\\\\) a subformula of the formula \\\\((R \\\\vee (P \\\\wedge Q))\\\\)?\",\n                        \"answer\": true,\n                        \"blocks\": true\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"correct\": null,\n                        \"incorrect\": null,\n                        \"title\": \"Evaluate Syntax\",\n                        \"text\": \"Is \\\\((Q \\\\wedge P)\\\\) a subformula of the formula \\\\((R \\\\vee (P \\\\wedge Q))\\\\)?\",\n                        \"answer\": false,\n                        \"blocks\": true\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"yesnoexercise\",\n                        \"correct\": null,\n                        \"incorrect\": null,\n                        \"title\": \"Evaluate Semantics\",\n                        \"text\": \"Given the following variable assignments: <ul><li>\\\\(a \\\\rightarrow 0\\\\)</li><li>\\\\(b \\\\rightarrow 1\\\\)</li><li>\\\\(c \\\\rightarrow 1\\\\)</li><li>\\\\(d \\\\rightarrow 1\\\\)</li></ul>Please specify the result for the following logical formula: <strong>\\\\((a \\\\land b) \\\\lor (c \\\\oplus D) \\\\)</strong>\",\n                        \"answer\": true,\n                        \"blocks\": true\n                    },\n                    \"children\": []\n                }, {\n                    \"data\": {\n                        \"type\": \"multianswerexercise\",\n                        \"correct\": {\n                            \"data\": {\n                                \"type\": \"section\",\n                                \"title\": \"Exercise Section title\",\n                                \"description\": \"Section description.\"\n                            },\n                            \"children\": [{\n                                \"data\": {\n                                    \"type\": \"paragraph\",\n                                    \"text\": \"Your answer is correct.\",\n                                    \"paragraphType\": \"text\"\n                                },\n                                \"children\": []\n                            }]\n                        },\n                        \"incorrect\": {\n                            \"data\": {\n                                \"type\": \"section\",\n                                \"title\": \"Exercise Section title\",\n                                \"description\": \"Section description.\"\n                            },\n                            \"children\": [{\n                                \"data\": {\n                                    \"type\": \"paragraph\",\n                                    \"text\": \"Your answer is wrong.\",\n                                    \"paragraphType\": \"text\"\n                                },\n                                \"children\": []\n                            }]\n                        },\n                        \"title\": \"Multiple Answers\",\n                        \"text\": \"Which of the following answeres is syntactically right:\",\n                        \"answerCandidates\": [{\n                            \"text\": \"\\\\(Q \\\\wedge P\\\\)\",\n                            \"correct\": true\n                        }, {\"text\": \"\\\\(Q \\\\wedge \\\\wedge P\\\\)\", \"correct\": false}, {\n                            \"text\": \"\\\\(\\\\wedge P\\\\)\",\n                            \"correct\": false\n                        }, {\"text\": \"\\\\((Q \\\\wedge P)\\\\)\", \"correct\": true}],\n                        \"blocks\": true,\n                        \"next\": null\n                    },\n                    \"children\": []\n                }]\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.1.2 Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": 2,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.2 Semantic\",\n                \"description\": \"Subsection 2 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.2.1 Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": 21\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.2.2 Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": 20,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"1.3 Subsection 3\",\n                \"description\": \"Subsection 3 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.3.1 Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": 24\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"1.3.2 Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": 23,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"unit\",\n                \"fullTitle\": \"1.4 Unit 1: Propositional Logic Formulas\",\n                \"breadcrumbTitle\": \"Unit 1\",\n                \"description\": \"Unit 1 description\",\n                \"prev\": null,\n                \"next\": 26\n            },\n            \"children\": []\n        }, {\n            \"data\": {\n                \"type\": \"unit\",\n                \"fullTitle\": \"1.5 Unit 2: Propositional Logic Formulas\",\n                \"breadcrumbTitle\": \"Unit 1\",\n                \"description\": \"Unit 1 description\",\n                \"prev\": 25,\n                \"next\": null\n            },\n            \"children\": []\n        }]\n    }, {\n        \"data\": {\n            \"type\": \"section\",\n            \"title\": \"Section 2\",\n            \"description\": \"Section 2 Description\"\n        },\n        \"children\": [{\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 1\",\n                \"description\": \"Subsection 1 Description\"\n            },\n            \"children\": []\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 2\",\n                \"description\": \"Subsection 2 Description\"\n            },\n            \"children\": []\n        }]\n    }, {\n        \"data\": {\n            \"type\": \"section\",\n            \"title\": \"Section 3\",\n            \"description\": \"Section 3 Description\"\n        },\n        \"children\": [{\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 1\",\n                \"description\": \"Subsection 1 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }, {\n            \"data\": {\n                \"type\": \"section\",\n                \"title\": \"Subsection 2\",\n                \"description\": \"Subsection 2 Description\"\n            },\n            \"children\": [{\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 1\",\n                    \"breadcrumbTitle\": \"Unit 1\",\n                    \"description\": \"Unit 1 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }, {\n                \"data\": {\n                    \"type\": \"unit\",\n                    \"fullTitle\": \"Unit 2\",\n                    \"breadcrumbTitle\": \"Unit 2\",\n                    \"description\": \"Unit 2 description\",\n                    \"prev\": null,\n                    \"next\": null\n                },\n                \"children\": []\n            }]\n        }]\n    }]\n}\n"
		}
	]
}